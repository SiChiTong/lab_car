// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

#include "BasicLogic.h"

BasicLogic::BasicLogic()
{
	CurrentTask = NonTask;
	CurrentType = NonType;
	InputTask = NonTask;
	InputType = NonType;
}

BasicLogic::~BasicLogic()
{
}

void BasicLogic::Upper_Processing()//尝试写成树的逻辑
{
g_GroupLogicAgent->GroupLogicProcessing();

if(g_GroupLogicAgent->GroupPermission==true && InputTask==NonTask&&CurrentTask==NonTask&&g_BlackBoardAgent->TaskList.empty()!=1)//单步无任务时取出任务列表中的任务赋给InputTask变量&&旧任务都完成才完成
		{
			g_GroupLogicAgent->GroupMember.assign(g_BlackBoardAgent->TaskList.back().car_id.begin(),g_BlackBoardAgent->TaskList.back().car_id.end());

			while(g_GroupLogicAgent->GroupPermission==false)
			{
				g_GroupLogicAgent->GroupLogicProcessing();
				logger.DEBUGINFO(g_BlackBoardAgent->car_id,"wait for others");
			}//新任务组员都空闲
			InputTask=(TaskIndividual)g_BlackBoardAgent->TaskList.back().mission.mission;

			g_BlackBoardAgent->	goal = g_BlackBoardAgent->TaskList.back().goal.pose;
			

			g_BlackBoardAgent->TaskList.pop_back();
		}
}

