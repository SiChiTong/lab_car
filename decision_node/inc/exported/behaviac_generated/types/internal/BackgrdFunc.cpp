// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

#include "BackgrdFunc.h"

///<<< BEGIN WRITING YOUR CODE FILE_INIT

///<<< END WRITING YOUR CODE

BackgrdFunc::BackgrdFunc()
{
///<<< BEGIN WRITING YOUR CODE CONSTRUCTOR

///<<< END WRITING YOUR CODE
}

BackgrdFunc::~BackgrdFunc()
{
}
void BackgrdFunc::Pause()
{
    switch (g_BasicLogicAgent->CurrentTask)
    {
        case Assemble:
        g_ForegrdFuncAgent->build_up_action->cancelGoal();
            break;
        case March_gps:
        {
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_gps_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_gps_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_gps_action");
        g_ForegrdFuncAgent->gps_march_action->cancelGoal();
        break;
        }
        case March_laser:
        {
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_laser_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_laser_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_laser_action");
            g_ForegrdFuncAgent->laser_march_action->cancelGoal();
            break;
        }
        default:
            break;
    }
}

void BackgrdFunc::Resume()
{
g_BasicLogicAgent->InputTask=g_BasicLogicAgent->CurrentTask;
g_BasicLogicAgent->CurrentTask=TaskIndividual::NonTask;
}

void BackgrdFunc::STOP()
{
    switch (g_BasicLogicAgent->CurrentTask)
    {
        case Assemble:
            g_ForegrdFuncAgent->build_up_action->cancelGoal();
            break;
        case March_gps:
        {
            g_ForegrdFuncAgent->gps_march_action->cancelGoal();
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_gps_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_gps_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_gps_action");
            break; 
        }
        case March_laser:
        {
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_laser_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_laser_action");
            logger.DEBUGINFO(g_BlackBoardAgent->car_id,"cancel_laser_action");
            g_ForegrdFuncAgent->laser_march_action->cancelGoal();
            break;
        }
        default:
            break;
    }
    g_BasicLogicAgent->CurrentTask=TaskIndividual::NonTask;
    behaviac::vector<int>().swap(g_GroupLogicAgent->GroupMember);
    g_ForegrdFuncAgent->fore_func_state=ForeFuncState::IDLE;
    g_BlackBoardAgent->PubDecisionState(g_ForegrdFuncAgent->fore_func_state);
}

