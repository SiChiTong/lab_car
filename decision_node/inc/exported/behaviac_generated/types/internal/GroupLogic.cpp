// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

#include "GroupLogic.h"

///<<< BEGIN WRITING YOUR CODE FILE_INIT

///<<< END WRITING YOUR CODE

GroupLogic::GroupLogic()
{
    GroupPermission=false;
	GroupMember.push_back(g_BlackBoardAgent->car_id);
///<<< BEGIN WRITING YOUR CODE CONSTRUCTOR

///<<< END WRITING YOUR CODE
}

GroupLogic::~GroupLogic()
{
///<<< BEGIN WRITING YOUR CODE DESTRUCTOR

///<<< END WRITING YOUR CODE
}

void GroupLogic::GroupLogicProcessing()
{
///<<< BEGIN WRITING YOUR CODE GroupLogicProcessing
//1:同组成员彼此握手(组内成员都认为内部成员是相同的)
//1:组内都是空闲状态
//基于以上，任务允许进行。

//2:BreakDown逻辑 暂无处理
GroupPermission=false;
bool group_idle=1;//1
auto iter=GroupState.begin();
    for(int j=0;j<GroupState.size();j++)//组内状态
    {
        if(*(iter+j)==ForeFuncState::Running)
            {
				group_idle=0;//有非空闲状态
            }
    }
    // if(SomeIsPause&&group_idle)
    //     ;//人机交互
	if(group_idle==1)
		GroupPermission=true;

///<<< END WRITING YOUR CODE
}


///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE
