// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#include "behaviac/common/meta.h"
#include "behaviac/common/member.h"
#include "behaviac_agent_meta.h"

namespace behaviac
{
	class CMethod_behaviac_Agent_VectorAdd : public CAgentMethodVoidBase
	{
		IInstanceMember* _param0;
		IInstanceMember* _param1;

	public: 
		CMethod_behaviac_Agent_VectorAdd() : _param0(0) , _param1(0) 
		{
		}

		CMethod_behaviac_Agent_VectorAdd(CMethod_behaviac_Agent_VectorAdd &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorAdd()
		{
			BEHAVIAC_DELETE _param0;
			BEHAVIAC_DELETE _param1;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 2);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
			_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);
			BEHAVIAC_ASSERT(_param1 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
			behaviac::Agent::VectorAdd(pValue_param0, pValue_param1);
		}
	};

	class CMethod_behaviac_Agent_VectorClear : public CAgentMethodVoidBase
	{
		IInstanceMember* _param0;

	public: 
		CMethod_behaviac_Agent_VectorClear() : _param0(0) 
		{
		}

		CMethod_behaviac_Agent_VectorClear(CMethod_behaviac_Agent_VectorClear &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorClear()
		{
			BEHAVIAC_DELETE _param0;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 1);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			behaviac::Agent::VectorClear(pValue_param0);
		}
	};

	class CMethod_behaviac_Agent_VectorContains : public CAgentMethodBase<bool>
	{
		IInstanceMember* _param0;
		IInstanceMember* _param1;

	public: 
		CMethod_behaviac_Agent_VectorContains() : _param0(0) , _param1(0) 
		{
		}

		CMethod_behaviac_Agent_VectorContains(CMethod_behaviac_Agent_VectorContains &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) , _param1(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorContains()
		{
			BEHAVIAC_DELETE _param0;
			BEHAVIAC_DELETE _param1;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 2);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
			_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);
			BEHAVIAC_ASSERT(_param1 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
			_returnValue->value = behaviac::Agent::VectorContains(pValue_param0, pValue_param1);
		}
	};

	class CMethod_behaviac_Agent_VectorLength : public CAgentMethodBase<int>
	{
		IInstanceMember* _param0;

	public: 
		CMethod_behaviac_Agent_VectorLength() : _param0(0) 
		{
		}

		CMethod_behaviac_Agent_VectorLength(CMethod_behaviac_Agent_VectorLength &rhs) : CAgentMethodBase<int>(rhs) , _param0(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorLength()
		{
			BEHAVIAC_DELETE _param0;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 1);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			_returnValue->value = behaviac::Agent::VectorLength(pValue_param0);
		}
	};

	class CMethod_behaviac_Agent_VectorRemove : public CAgentMethodVoidBase
	{
		IInstanceMember* _param0;
		IInstanceMember* _param1;

	public: 
		CMethod_behaviac_Agent_VectorRemove() : _param0(0) , _param1(0) 
		{
		}

		CMethod_behaviac_Agent_VectorRemove(CMethod_behaviac_Agent_VectorRemove &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorRemove()
		{
			BEHAVIAC_DELETE _param0;
			BEHAVIAC_DELETE _param1;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 2);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
			_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);
			BEHAVIAC_ASSERT(_param1 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
			behaviac::Agent::VectorRemove(pValue_param0, pValue_param1);
		}
	};

	class BehaviorLoaderImplement : BehaviorLoader
	{
	public:
		BehaviorLoaderImplement()
		{
			AgentMeta::SetBehaviorLoader(this);
		}

		virtual ~BehaviorLoaderImplement()
		{
		}

		virtual bool load()
		{
			AgentMeta::SetTotalSignature(334470205u);

			AgentMeta* meta = NULL;
			BEHAVIAC_UNUSED_VAR(meta);

			// behaviac::Agent
			meta = BEHAVIAC_NEW AgentMeta(24743406u);
			AgentMeta::GetAgentMetas()[1770892321u] = meta;
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_behaviac_Agent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// BasicLogic
			meta = BEHAVIAC_NEW AgentMeta(2308046977u);
			AgentMeta::GetAgentMetas()[3030865775u] = meta;
			meta->RegisterMemberProperty(3122630375u, BEHAVIAC_NEW CMemberProperty< TaskIndividual >("CurrentTask", Set_BasicLogic_CurrentTask, Get_BasicLogic_CurrentTask));
			meta->RegisterMemberProperty(3010945600u, BEHAVIAC_NEW CMemberProperty< TaskType >("CurrentType", Set_BasicLogic_CurrentType, Get_BasicLogic_CurrentType));
			meta->RegisterMemberProperty(2409883058u, BEHAVIAC_NEW CMemberProperty< TaskIndividual >("InputTask", Set_BasicLogic_InputTask, Get_BasicLogic_InputTask));
			meta->RegisterMemberProperty(2261453077u, BEHAVIAC_NEW CMemberProperty< TaskType >("InputType", Set_BasicLogic_InputType, Get_BasicLogic_InputType));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_BasicLogic_LogMessage));
			meta->RegisterMethod(1127271997u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_BasicLogic_Upper_Processing));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// BlackBoard
			meta = BEHAVIAC_NEW AgentMeta(544643081u);
			AgentMeta::GetAgentMetas()[554893437u] = meta;
			meta->RegisterMemberProperty(4061333314u, BEHAVIAC_NEW CMemberProperty< int >("car_number", Set_BlackBoard_car_number, Get_BlackBoard_car_number));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_BlackBoard_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// ForegrdFunc
			meta = BEHAVIAC_NEW AgentMeta(1595803266u);
			AgentMeta::GetAgentMetas()[1588922205u] = meta;
			meta->RegisterMethod(3496515545u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ForegrdFunc_Assemble));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_ForegrdFunc_LogMessage));
			meta->RegisterMethod(3106451133u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ForegrdFunc_March_gps));
			meta->RegisterMethod(2622773627u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ForegrdFunc_March_laser));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// BackgrdFunc
			meta = BEHAVIAC_NEW AgentMeta(3687076435u);
			AgentMeta::GetAgentMetas()[258680416u] = meta;
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_BackgrdFunc_LogMessage));
			meta->RegisterMethod(2220352924u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_BackgrdFunc_Pause));
			meta->RegisterMethod(3717590755u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_BackgrdFunc_Resume));
			meta->RegisterMethod(3289478844u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_BackgrdFunc_STOP));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// GroupLogic
			meta = BEHAVIAC_NEW AgentMeta(1178654980u);
			AgentMeta::GetAgentMetas()[1052758676u] = meta;
			meta->RegisterMemberProperty(431491385u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<int> >("GroupMember", Set_GroupLogic_GroupMember, Get_GroupLogic_GroupMember));
			meta->RegisterMemberProperty(1782603186u, BEHAVIAC_NEW CMemberArrayItemProperty< int >("GroupMember[]", Set_GroupLogic_GroupMember, Get_GroupLogic_GroupMember));
			meta->RegisterMemberProperty(2927913959u, BEHAVIAC_NEW CMemberProperty< bool >("GroupPermission", Set_GroupLogic_GroupPermission, Get_GroupLogic_GroupPermission));
			meta->RegisterMemberProperty(3166702640u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<ForeFuncState> >("GroupState", Set_GroupLogic_GroupState, Get_GroupLogic_GroupState));
			meta->RegisterMemberProperty(3173903789u, BEHAVIAC_NEW CMemberArrayItemProperty< ForeFuncState >("GroupState[]", Set_GroupLogic_GroupState, Get_GroupLogic_GroupState));
			meta->RegisterMethod(1852019596u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_GroupLogic_GroupLogicProcessing));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_GroupLogic_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			AgentMeta::Register<behaviac::Agent>("behaviac::Agent");
			AgentMeta::Register<BasicLogic>("BasicLogic");
			AgentMeta::Register<BlackBoard>("BlackBoard");
			AgentMeta::Register<ForegrdFunc>("ForegrdFunc");
			AgentMeta::Register<BackgrdFunc>("BackgrdFunc");
			AgentMeta::Register<GroupLogic>("GroupLogic");
			AgentMeta::Register<TaskIndividual>("TaskIndividual");
			AgentMeta::Register<TaskType>("TaskType");
			AgentMeta::Register<ForeFuncState>("ForeFuncState");

			Agent::RegisterInstanceName<BasicLogic>("BasicLogic");
			Agent::RegisterInstanceName<BlackBoard>("BlackBoard");
			Agent::RegisterInstanceName<ForegrdFunc>("ForegrdFunc");
			Agent::RegisterInstanceName<BackgrdFunc>("BackgrdFunc");
			Agent::RegisterInstanceName<GroupLogic>("GroupLogic");

			return true;
		}

		virtual bool unLoad()
		{
			AgentMeta::UnRegister<behaviac::Agent>("behaviac::Agent");
			AgentMeta::UnRegister<BasicLogic>("BasicLogic");
			AgentMeta::UnRegister<BlackBoard>("BlackBoard");
			AgentMeta::UnRegister<ForegrdFunc>("ForegrdFunc");
			AgentMeta::UnRegister<BackgrdFunc>("BackgrdFunc");
			AgentMeta::UnRegister<GroupLogic>("GroupLogic");
			AgentMeta::UnRegister<TaskIndividual>("TaskIndividual");
			AgentMeta::UnRegister<TaskType>("TaskType");
			AgentMeta::UnRegister<ForeFuncState>("ForeFuncState");

			Agent::UnRegisterInstanceName<BasicLogic>("BasicLogic");
			Agent::UnRegisterInstanceName<BlackBoard>("BlackBoard");
			Agent::UnRegisterInstanceName<ForegrdFunc>("ForegrdFunc");
			Agent::UnRegisterInstanceName<BackgrdFunc>("BackgrdFunc");
			Agent::UnRegisterInstanceName<GroupLogic>("GroupLogic");

			return true;
		}
	};

	static BehaviorLoaderImplement _behaviorLoaderImplement_;

	static BehaviorLoaderImplement* _pBehaviorLoader_ = NULL;

	void InitBehaviorLoader()
	{
		_pBehaviorLoader_ = BEHAVIAC_NEW BehaviorLoaderImplement();
	}

	void DestroyBehaviorLoader()
	{
		if (_pBehaviorLoader_)
		{
			BEHAVIAC_DELETE _pBehaviorLoader_;
			_pBehaviorLoader_ = NULL;
		}
	}
}
